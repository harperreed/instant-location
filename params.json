{"name":"Instant-location","tagline":"A terrible and slow replacement for the sadly departed latitude API","body":"#instant location \r\n##A terrible and slow replacement for the sadly departed latitude API\r\n\r\n\r\nGrab your social checkins, tweets, photos and store the last known location.\r\n\r\nEver since latitude was pulled and the API stopped working I decided to grab\r\nmy location from the social interactions instead of the no longer working\r\nlatitude api.\r\n\r\nI have code similar to this running to store my current location and\r\npower [http://harperreed.com/location](http://harperreed.com/location).\r\n\r\nI tried to make it as simple as possible to support new apps that store\r\nlocation. Feel free to add a facebook class.\r\n\r\nUse it and hit me up: [@harper](http://twitter.com/harper) ([harper@nata2.org](mailto:harper@nata2.org))\r\n\r\n##How to use it\r\n\r\n###Requirements\r\nYou will need to install these things\r\n\r\n * `easy_install python-twitter`\r\n * `easy_install foursquare`\r\n * `easy_install python-flickr`\r\n * `easy_install boto` (if you want to upload to s3)\r\n \r\n###Configure the app\r\n\r\n * rename the `config.py.example` to `config.py`\r\n * fill out all the goodies in `config.py`\r\n \r\n\t\t\"\"\"\r\n\t\t_________                _____.__\r\n\t\t\\_   ___ \\  ____   _____/ ____\\__| ____\r\n\t\t/    \\  \\/ /  _ \\ /    \\   __\\|  |/ ___\\\r\n\t\t\\     \\___(  <_> )   |  \\  |  |  / /_/  >\r\n\t\t \\______  /\\____/|___|  /__|  |__\\___  /\r\n\t\t        \\/            \\/        /_____/\r\n\t\t\r\n\t\tYou will need to grab the various tokens to go forward. I tried to make it\r\n\t\tas easy as possible.\r\n\t\t\r\n\t\t\"\"\"\r\n\t\t\r\n\t\t#Twitter API Tokens\r\n\t\t#Get creds\r\n\t\t#https://dev.twitter.com/apps/new\r\n\t\ttwitter_consumer_key = \"\"\r\n\t\ttwitter_consumer_secret = \"\"\r\n\t\ttwitter_access_token_key = \"\"\r\n\t\ttwitter_access_token_secret = \"\"\r\n\t\t\r\n\t\t#Foursquare API Tokens\r\n\t\t#Get creds here:\r\n\t\t#https://foursquare.com/developers/register\r\n\t\tfoursquare_client_id = \"\"\r\n\t\tfoursquare_client_secret = \"\"\r\n\t\tfoursquare_redirect_uri = \"\"\r\n\t\tfoursquare_access_token = \"\"\r\n\t\t\r\n\t\t#Flickr API Tokens\r\n\t\t#Get creds here:\r\n\t\t#http://www.flickr.com/services/apps/create/noncommercial/?\r\n\t\tflickr_key = \"\"\r\n\t\tflickr_secret = \"\"\r\n\t\tflickr_oauth_token=\"\"\r\n\t\tflickr_oauth_token_secret=\"\"\r\n\t\tflickr_nsid = \"\"\r\n\t\t\r\n\t\t#amazon aws\r\n\t\tamazon_s3_bucket_name = 'my_location_bucket'\r\n\t\tamazon_access_key = \"\"\r\n\t\tamazon_secret_access_key = \"\"\r\n\t\t\r\n\t\t#filename\r\n\t\trecent_location_filename = \"recent_location.json\"\r\n \r\n###Run the bad boy\r\n\r\n####Drop a local file with location\r\n\r\n * You can run each of the scripts individually to make sure they work: `python foursquare_location.py`\r\n\t\r\n\t\tharper@ {~/instant-location}$ python foursquare_location.py\r\n\t\t<__main__.foursquare_location object at 0x10828d710>\r\n\t\t{'date': '2013-08-09 19:38:24', 'source': 'foursquare', 'id': 1376095104, 'longitude': -87.68533102506872, 'latitude': 41.91035473476432}\r\n\t\t1376095104\r\n * Once you are confident it works correctly go ahead and run the main `locations.py` script\r\n \r\n\t\tharper@ {~/instant-location}$ ./location_to_file.py\r\n\t\thttp://maps.googleapis.com/maps/api/staticmap?zoom=13&size=600x300&maptype=roadmap&markers=color:blue%7Clabel:S%7C41.91008943,-87.68528519&sensor=false\r\n\r\n\tThis outputs a map url of your last known location. Whee. \r\n\t\r\n\tIt also drops `recent_location.json`\r\n\t\r\n\tThe `recent_location.json` has your most recent location!\r\n\t\r\n####Upload file to an s3 bucket\r\n\r\nYou can do the same thing as dropping a local file, but you push the file to an s3 bucket. \r\n\r\nThe first step is to make sure your config file has your AWS keys, and bucket name. The bucket can exist, but it will set the generated file as public. \r\n\r\nOnce you run the script `location_to_s3.py`, the file will be uploaded to the bucket and BAM - you have a publicly accessible JSON file with your location. \r\n\r\n\t\tharper@ {~/instant-location}$ ./location_to_s3.py\r\n\t\tS3 URL: https://my_location_bucket.s3.amazonaws.com/recent_location.json\r\n\r\nPublicly Accessible:\r\n\r\n\t\tharper@ {~/instant-location}$ curl https://my_location_bucket.s3.amazonaws.com/recent_location.json\r\n\t\t{\"date\": \"2013-08-12 03:10:38\", \"source\": \"twitter\", \"id\": 366758599919284224, \"longitude\": -87.6755019, \"latitude\": 41.90907876}%\r\n\r\nThis is how we will be using this to upload location data for inclusion in a map of our friends. \r\n\t\r\n##Next steps\r\nThere is a lot of places that could be made more efficient or better. Feel free to fix it up. \r\n\r\nHere are my thoughts: \r\n\r\n * ~~cronable script to post recent_location.json to s3~~\r\n * facebook support\r\n * instagram support\r\n * site generator for something similar to [http://wheres.broox.com/](http://wheres.broox.com/)\r\n \r\n Other ideas?\r\n\r\n##Motivation\r\n\r\nMy buddy Derek Brooks has an amazing geo setup on his site. I always follow his lead and have replicated it on my site. This works well, but is about 200 terrible scripts. We wanted to add location for a couple other people and so i whipped up a stand alone script. \r\n\r\nThis is going ot be used to power a map of [my awesome coworkers](http://ltc.io).\r\n\r\n##Harper is awesome. \r\nhit me up: [@harper](http://twitter.com/harper) ([harper@nata2.org](mailto:harper@nata2.org))\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}